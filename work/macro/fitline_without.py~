def fitLine0(points):
    line = None
    n = len(points)
    v1 = np.array([1]*n)
    vx = np.array(list(map(lambda x: x[0], points) ) )
    vy = np.array(list(map(lambda x: x[1], points) ) )
    # Line: p0+p1*x+p2*y = 0
    X = np.c_[ v1, vx, vy]
    M = np.dot(X.T, X)
    xx = M[1][1] - M[1][0]*M[0][1]
    yy = M[2][2] - M[2][0]*M[0][2]
    if xx > yy: # y=ax+b
        ifix = 2
    else: # x=ay+b
        ifix = 1
    M2 = [ [0, 0], [0, 0] ]
    b2 = [0, 0]
    i2, j2 = 0, 0
    for i in range(3):
        if i == ifix:
            continue
        j2 = 0
        for j in range(3):
            if j == ifix:
                b2[i2] = -M[i][j]
                continue
            M2[i2][j2] = M[i][j]
            j2 += 1
        i2 += 1
    pars2 = linalg.solve(M2, b2)
    pars = [0]*3
    i2 = 0
    for i in range(3):
        if i == ifix:
            pars[i] = 1.0
        else:
            pars[i] = pars2[i2]
            i2 += 1
    line = Line()
    #for p in points:
    #    print(p.position)
    #print(pars)
    line.setPars(pars)
    return line
